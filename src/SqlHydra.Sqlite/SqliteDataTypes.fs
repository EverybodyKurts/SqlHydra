module SqlHydra.Sqlite.SqliteDataTypes

let typeMappingsByName =
    [ "smallint"        ,"int16"
      "int"             ,"int"
      "real"            ,"double"
      "single"          ,"System.Single"
      "float"           ,"double"
      "double"          ,"double"
      "money"           ,"decimal"
      "currency"        ,"decimal"
      "decimal"         ,"decimal"
      "numeric"         ,"decimal"
      "bit"             ,"bool"
      "yesno"           ,"bool"
      "logical"         ,"bool"
      "bool"            ,"bool"
      "boolean"         ,"bool"
      "tinyint"         ,"byte"
      "integer"         ,"int64"    
      "counter"         ,"int64"    
      "autoincrement"   ,"int64"    
      "identity"        ,"int64"    
      "long"            ,"int64"    
      "bigint"          ,"int64"    
      "binary"          ,"byte[]"   
      "varbinary"       ,"byte[]"   
      "blob"            ,"byte[]"   
      "image"           ,"byte[]"   
      "general"         ,"byte[]"   
      "oleobject"       ,"byte[]"   
      "varchar"         ,"string"   
      "nvarchar"        ,"string"   
      "memo"            ,"string"   
      "longtext"        ,"string"   
      "note"            ,"string"   
      "text"            ,"string"   
      "ntext"           ,"string"   
      "string"          ,"string"   
      "char"            ,"string"   
      "nchar"           ,"string"   
      "datetime"        ,"System.DateTime" 
      "smalldate"       ,"System.DateTime" 
      "timestamp"       ,"System.DateTime" 
      "date"            ,"System.DateTime" 
      "time"            ,"System.DateTime" 
      "uniqueidentifier","System.Guid"     
      "guid"            ,"System.Guid" ]
    |> Map.ofList

let findClrType (dataType: string) =
    typeMappingsByName.TryFind (dataType.ToLower())
    |> Option.defaultValue "obj"

